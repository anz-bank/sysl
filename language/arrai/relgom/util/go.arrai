let capitaliseCommonInitialisms =
    //.re.compile(
        `(` ++
            `Acl|Api|Ascii|Cpu|Css|Dns|Eof|Guid|Html|Http|Https|Id|Ip|Json|` ++
            `Lhs|Qps|Ram|Rhs|Rpc|Sla|Smtp|Sql|Ssh|Tcp|Tls|Ttl|Udp|Ui|Uid|` ++
            `Uuid|Uri|Url|Utf8|Vm|Xml|Xmpp|Xsrf|Xss` ++
        `)([^a-z]|$)`
    ).subf(//.str.upper);

let unexport =
    let goKeywords = {
        "break", "default", "func", "interface", "select", "case", "defer",
        "go", "map", "struct", "chan", "else", "goto", "package", "switch",
        "const", "fallthrough", "if", "range", "type", "continue", "for",
        "import", "return", "var",
    };
    \id
        let id = (
            id + "_" if id <: goKeywords
            else capitaliseCommonInitialisms(id)
        );
        //.str.lower(id where .@ = 0) | (id where .@ > 0);

let param = \type
    (
        let primitive = type("primitive").s;
        "bool"              if primitive = "BOOL"                  else
        "int64"             if primitive = "INT"                   else
        "float64"           if primitive = "FLOAT"                 else
        "decimal.Decimal64" if primitive = "DECIMAL"               else
        "string"            if primitive <: {"STRING", "STRING_8"} else
        "time.Time"         if primitive <: {"DATE", "DATETIME"}   else
        $"??${type}??"
    ) if "primitive" <: (type => .@) else
    $"??${type}??";

let type = \model \type
    let gotype = param(//./sysl.baseType(model, type));
    ("*" if "opt" <: (type => .@) && type("opt") && !//./sysl.isPK(type))++gotype;

(
    :param,
    :type,
    :unexport,

    export: \id
        //.str.title(capitaliseCommonInitialisms(id)),

    fieldForAttrDef: \model \mangleName \.
        $`${mangleName(.name)} ${type(model, .type)}`,


    prelude: \pkgname $`
        //////////////////////////////////////////
        //                                      //
        //  AUTOGENERATED CODE -- DO NOT EDIT!  //
        //                                      //
        //////////////////////////////////////////
        package ${pkgname}

        import (
            "encoding/json"

            "github.com/anz-bank/decimal"
            "github.com/anz-bank/sysl/language/go/pkg/relgom/relgomlib"
            "github.com/arr-ai/frozen"
            "github.com/arr-ai/hash"
        )`,
)
