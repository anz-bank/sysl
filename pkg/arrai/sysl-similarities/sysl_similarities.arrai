\lhs \rhs
    let (
        anno?:  lhsAnno:(),
        src?:   lhsSrc:(),
        tag?:   lhsTag:(),
        app?:   lhsApp:{},
        enum?:  lhsEnum:{},
        ep?:    lhsEp:{},
        event?: lhsEvent:{},
        field?: lhsField:{},
        mixin?: lhsMixin:{},
        param?: lhsParam:{},
        stmt?:  lhsStmt:{},
        table?: lhsTable:{},
        type?:  lhsType:{},
        view?:  lhsView:{},
        alias?: lhsAlias:{},
        ...
    ) = lhs;
    let (
        app?:   lhsAnnoApp:{},
        ep?:    lhsAnnoEp:{},
        event?: lhsAnnoEvent:{},
        field?: lhsAnnoField:{},
        param?: lhsAnnoParam:{},
        mixin?: lhsAnnoMixin:{},
        stmt?:  lhsAnnoStmt:{},
        type?:  lhsAnnoType:{},
        view?:  lhsAnnoView:{},
        ...
    ) = lhsAnno;
    let (
        app?:   lhsSrcApp:{},
        ep?:    lhsSrcEp:{},
        event?: lhsSrcEvent:{},
        field?: lhsSrcField:{},
        param?: lhsSrcParam:{},
        mixin?: lhsSrcMixin:{},
        stmt?:  lhsSrcStmt:{},
        type?:  lhsSrcType:{},
        view?:  lhsSrcView:{},
        ...
    ) = lhsSrc;
    let (
        app?:   lhsTagApp:{},
        ep?:    lhsTagEp:{},
        event?: lhsTagEvent:{},
        field?: lhsTagField:{},
        param?: lhsTagParam:{},
        mixin?: lhsTagMixin:{},
        stmt?:  lhsTagStmt:{},
        type?:  lhsTagType:{},
        view?:  lhsTagView:{},
        ...
    ) = lhsTag;

    let (
        anno?:  rhsAnno:(),
        src?:   rhsSrc:(),
        tag?:   rhsTag:(),
        app?:   rhsApp:{},
        enum?:  rhsEnum:{},
        ep?:    rhsEp:{},
        event?: rhsEvent:{},
        field?: rhsField:{},
        mixin?: rhsMixin:{},
        param?: rhsParam:{},
        stmt?:  rhsStmt:{},
        table?: rhsTable:{},
        type?:  rhsType:{},
        view?:  rhsView:{},
        alias?: rhsAlias:{},
        ...
    ) = rhs;
    let (
        app?:   rhsAnnoApp:{},
        ep?:    rhsAnnoEp:{},
        event?: rhsAnnoEvent:{},
        field?: rhsAnnoField:{},
        param?: rhsAnnoParam:{},
        mixin?: rhsAnnoMixin:{},
        stmt?:  rhsAnnoStmt:{},
        type?:  rhsAnnoType:{},
        view?:  rhsAnnoView:{},
        ...
    ) = rhsAnno;
    let (
        app?:   rhsSrcApp:{},
        ep?:    rhsSrcEp:{},
        event?: rhsSrcEvent:{},
        field?: rhsSrcField:{},
        param?: rhsSrcParam:{},
        mixin?: rhsSrcMixin:{},
        stmt?:  rhsSrcStmt:{},
        type?:  rhsSrcType:{},
        view?:  rhsSrcView:{},
        ...
    ) = rhsSrc;
    let (
        app?:   rhsTagApp:{},
        ep?:    rhsTagEp:{},
        event?: rhsTagEvent:{},
        field?: rhsTagField:{},
        param?: rhsTagParam:{},
        mixin?: rhsTagMixin:{},
        stmt?:  rhsTagStmt:{},
        type?:  rhsTagType:{},
        view?:  rhsTagView:{},
        ...
    ) = rhsTag;

    (
        anno: (
            app:   lhsAnnoApp   & rhsAnnoApp,
            ep:    lhsAnnoEp    & rhsAnnoEp,
            event: lhsAnnoEvent & rhsAnnoEvent,
            field: lhsAnnoField & rhsAnnoField,
            param: lhsAnnoParam & rhsAnnoParam,
            mixin: lhsAnnoMixin & rhsAnnoMixin,
            stmt:  lhsAnnoStmt  & rhsAnnoStmt,
            type:  lhsAnnoType  & rhsAnnoType,
            view:  lhsAnnoView  & rhsAnnoView,
        ),
        src: (
            ep:    lhsSrcEp    & rhsSrcEp,
            app:   lhsSrcApp   & rhsSrcApp,
            event: lhsSrcEvent & rhsSrcEvent,
            field: lhsSrcField & rhsSrcField,
            param: lhsSrcParam & rhsSrcParam,
            mixin: lhsSrcMixin & rhsSrcMixin,
            stmt:  lhsSrcStmt  & rhsSrcStmt,
            type:  lhsSrcType  & rhsSrcType,
            view:  lhsSrcView  & rhsSrcView,
        ),
        tag: (
            app:   lhsTagApp   & rhsTagApp,
            ep:    lhsTagEp    & rhsTagEp,
            event: lhsTagEvent & rhsTagEvent,
            field: lhsTagField & rhsTagField,
            param: lhsTagParam & rhsTagParam,
            mixin: lhsTagMixin & rhsTagMixin,
            stmt:  lhsTagStmt  & rhsTagStmt,
            type:  lhsTagType  & rhsTagType,
            view:  lhsTagView  & rhsTagView,
        ),
        event: lhsEvent & rhsEvent,
        mixin: lhsMixin & rhsMixin,
        app:   lhsApp   & rhsApp,
        table: lhsTable & rhsTable,
        type:  lhsType  & rhsType,
        enum:  lhsEnum  & rhsEnum,
        field: lhsField & rhsField,
        ep:    lhsEp    & rhsEp,
        param: lhsParam & rhsParam,
        stmt:  lhsStmt  & rhsStmt,
        view:  lhsView  & rhsView,
        alias: lhsAlias & rhsAlias,
    )
