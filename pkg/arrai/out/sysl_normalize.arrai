(
  alias: {
    |aliasType, appName, typeName|
    (
      (
        appName: ['Client'],
        typePath: ['Screen'],
      ),
      ['Client'],
      'Display',
    ),
    (
      (
        primitive: 'INT',
      ),
      ['Client'],
      'Digit',
    ),
    (
      (
        sequence: (
          primitive: 'INT',
        ),
      ),
      ['Client'],
      'Digits',
    ),
  },
  anno: (
    app: {
      |appAnnoName, appAnnoValue, appName|
      ('description', 'A database.\n Stores data.\n', ['Source']),
      ('package', 'io.sysl.bank.model', ['Source']),
    },
    ep: {},
    event: {},
    field: {
      |appName, fieldAnnoName, fieldAnnoValue, fieldName, typeName|
      (['A'], 'examples', ['12', '42'], 'ax', 'FetchResponse'),
      (['A'], 'examples', ['12', '42'], 'ay', 'FetchResponse'),
      (['Source'], 'description', 'A foreign key', 'x', 'Bar'),
      (['Source'], 'description', 'A foreign key', 'y', 'Bar'),
      (['Source'], 'description', 'An optional int', 'b', 'Bar'),
      (['Source'], 'description', 'The x value.', 'x', 'Foo'),
    },
    mixin: {},
    param: {
      |appName, epName, paramAnnoName, paramAnnoValue, paramIndex, paramName|
      (['Source'], 'POST /post', 'mediatype', 'application/json', 2, 'request'),
      (['Source'], 'POST /post', 'name', 'ssotoken', 1, 'ssotoken'),
      (['Source'], 'POST /post', 'name', 'x-request-id', 0, 'x_request_id'),
    },
    stmt: {},
    type: {
      |appName, typeAnnoName, typeAnnoValue, typeName|
      (['Source'], 'description', 'A Foo.\n Represents foo things.\n', 'Foo'),
      (['Source'], 'description', 'A bar table.', 'Bar'),
    },
    view: {},
  ),
  app: {
    |appDocstring, appLongName, appName|
    ({}, {}, ['A']),
    ({}, {}, ['B']),
    ({}, {}, ['C']),
    ({}, {}, ['Client']),
    ({}, {}, ['D']),
    ({}, {}, ['Source']),
    ({}, {}, ['all']),
  },
  enum: {
    |appName, enumItems, typeName|
    (
      ['B'],
      {
        'A': 784,
        'B': 971,
        'C': 8,
      },
      'Code',
    ),
  },
  ep: {
    |appName, epDocstring, epEvent, epLongName, epName, rest|
    (
      ['A'],
      {},
      (),
      {},
      'Fetch',
      (),
    ),
    (
      ['B'],
      {},
      (),
      {},
      'Fetch',
      (),
    ),
    (
      ['C'],
      {},
      (),
      {},
      'Fetch',
      (),
    ),
    (
      ['C'],
      {},
      (),
      {},
      'FetchA',
      (),
    ),
    (
      ['C'],
      {},
      (),
      {},
      'FetchB',
      (),
    ),
    (
      ['Client'],
      {},
      (),
      {},
      'Do',
      (),
    ),
    (
      ['D'],
      {},
      (),
      {},
      'Fetch',
      (),
    ),
    (
      ['Source'],
      {},
      (),
      {},
      'GET /get/{id}',
      (
        method: 'GET',
        path: '/get/{id}',
      ),
    ),
    (
      ['Source'],
      {},
      (),
      {},
      'POST /post',
      (
        method: 'POST',
        path: '/post',
      ),
    ),
    (
      ['Source'],
      {},
      (),
      {},
      'Read',
      (),
    ),
    (
      ['all'],
      {},
      (),
      {},
      'all',
      (),
    ),
  },
  event: {},
  field: {
    |appName, fieldConstraint, fieldName, fieldOpt, fieldType, typeName|
    (
      ['A'],
      (),
      'ax',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['A'],
      (),
      'ay',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['B'],
      (),
      'bx',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['B'],
      (),
      'by',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['C'],
      (),
      'cx',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['C'],
      (),
      'cy',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['Client'],
      (),
      'ww',
      {},
      (
        appName: ['Client'],
        typePath: ['Digit'],
      ),
      'Screen',
    ),
    (
      ['Client'],
      (),
      'xx',
      {},
      (
        primitive: 'INT',
      ),
      'Screen',
    ),
    (
      ['Client'],
      (),
      'yy',
      {},
      (
        primitive: 'INT',
      ),
      'Screen',
    ),
    (
      ['Client'],
      (),
      'zz',
      {},
      (
        appName: ['Client'],
        typePath: ['Digits'],
      ),
      'Screen',
    ),
    (
      ['D'],
      (),
      'dx',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['D'],
      (),
      'dy',
      {},
      (
        primitive: 'INT',
      ),
      'FetchResponse',
    ),
    (
      ['Source'],
      (),
      'a',
      {},
      (
        primitive: 'STRING',
      ),
      'Bar',
    ),
    (
      ['Source'],
      (),
      'b',
      true,
      (
        primitive: 'INT',
      ),
      'Bar',
    ),
    (
      ['Source'],
      (),
      'x',
      {},
      (
        appName: ['Source'],
        typePath: ['Foo', 'x'],
      ),
      'Bar',
    ),
    (
      ['Source'],
      (),
      'x',
      {},
      (
        primitive: 'INT',
      ),
      'Foo',
    ),
    (
      ['Source'],
      (),
      'y',
      {},
      (
        appName: ['Source'],
        typePath: ['Foo', 'y'],
      ),
      'Bar',
    ),
    (
      ['Source'],
      (),
      'y',
      {},
      (
        primitive: 'INT',
      ),
      'Foo',
    ),
    (
      ['Source'],
      (),
      'z',
      true,
      (
        primitive: 'INT',
      ),
      'Foo',
    ),
  },
  mixin: {},
  param: {
    |appName, epName, paramIndex, paramLoc, paramName, paramOpt, paramType|
    (
      ['Source'],
      'GET /get/{id}',
      0,
      'path',
      'id',
      {},
      (
        primitive: 'INT',
      ),
    ),
    (
      ['Source'],
      'POST /post',
      0,
      'header',
      'x_request_id',
      {},
      (
        primitive: 'STRING',
      ),
    ),
    (
      ['Source'],
      'POST /post',
      0,
      'query',
      'page',
      true,
      (
        primitive: 'INT',
      ),
    ),
    (
      ['Source'],
      'POST /post',
      1,
      'cookie',
      'ssotoken',
      true,
      (
        primitive: 'STRING',
      ),
    ),
    (
      ['Source'],
      'POST /post',
      1,
      'query',
      'bar',
      true,
      (
        appName: ['Source'],
        typePath: ['Bar'],
      ),
    ),
    (
      ['Source'],
      'POST /post',
      2,
      'body',
      'request',
      {},
      (
        appName: ['Source'],
        typePath: ['Bar'],
      ),
    ),
    (
      ['Source'],
      'Read',
      0,
      'method',
      'accountNumber',
      {},
      (
        primitive: 'STRING',
      ),
    ),
  },
  src: (
    app: {
      |appName, appSrc, appSrcs|
      (
        ['A'],
        (
          end: (
            col: 40,
            line: 46,
          ),
          file: 'model.sysl',
          start: (
            line: 38,
          ),
        ),
        [
          (
            end: (
              col: 40,
              line: 46,
            ),
            file: 'model.sysl',
            start: (
              line: 38,
            ),
          ),
        ],
      ),
      (
        ['B'],
        (
          end: (
            col: 1,
            line: 62,
          ),
          file: 'model.sysl',
          start: (
            line: 48,
          ),
        ),
        [
          (
            end: (
              col: 1,
              line: 62,
            ),
            file: 'model.sysl',
            start: (
              line: 48,
            ),
          ),
        ],
      ),
      (
        ['C'],
        (
          end: (
            col: 14,
            line: 79,
          ),
          file: 'model.sysl',
          start: (
            line: 62,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 79,
            ),
            file: 'model.sysl',
            start: (
              line: 62,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        (
          end: (
            col: 3,
            line: 111,
          ),
          file: 'model.sysl',
          start: (
            line: 91,
          ),
        ),
        [
          (
            end: (
              col: 3,
              line: 111,
            ),
            file: 'model.sysl',
            start: (
              line: 91,
            ),
          ),
        ],
      ),
      (
        ['D'],
        (
          end: (
            col: 14,
            line: 89,
          ),
          file: 'model.sysl',
          start: (
            line: 81,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 89,
            ),
            file: 'model.sysl',
            start: (
              line: 81,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        (
          end: (
            col: 18,
            line: 36,
          ),
          file: 'model.sysl',
          start: (),
        ),
        [
          (
            end: (
              col: 18,
              line: 36,
            ),
            file: 'model.sysl',
            start: (),
          ),
        ],
      ),
      (
        ['all'],
        (
          end: (
            col: 9,
            line: 118,
          ),
          file: 'model.sysl',
          start: (
            line: 111,
          ),
        ),
        [
          (
            end: (
              col: 9,
              line: 118,
            ),
            file: 'model.sysl',
            start: (
              line: 111,
            ),
          ),
        ],
      ),
    },
    ep: {
      |appName, epName, epSrc, epSrcs|
      (
        ['A'],
        'Fetch',
        (
          end: (
            col: 14,
            line: 41,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 39,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 41,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 39,
            ),
          ),
        ],
      ),
      (
        ['B'],
        'Fetch',
        (
          end: (
            col: 14,
            line: 51,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 49,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 51,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 49,
            ),
          ),
        ],
      ),
      (
        ['C'],
        'Fetch',
        (
          end: (
            col: 14,
            line: 75,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 72,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 75,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 72,
            ),
          ),
        ],
      ),
      (
        ['C'],
        'FetchA',
        (
          end: (
            col: 14,
            line: 65,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 63,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 65,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 63,
            ),
          ),
        ],
      ),
      (
        ['C'],
        'FetchB',
        (
          end: (
            col: 14,
            line: 69,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 67,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 69,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 67,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        'Do',
        (
          end: (
            col: 14,
            line: 94,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 92,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 94,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 92,
            ),
          ),
        ],
      ),
      (
        ['D'],
        'Fetch',
        (
          end: (
            col: 14,
            line: 85,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 82,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 85,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 82,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        'GET /get/{id}',
        (
          end: (
            col: 4,
            line: 34,
          ),
          file: 'model.sysl',
          start: (
            col: 12,
            line: 30,
          ),
        ),
        [
          (
            end: (
              col: 4,
              line: 34,
            ),
            file: 'model.sysl',
            start: (
              col: 12,
              line: 30,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        'POST /post',
        (
          end: (
            col: 1,
            line: 38,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 35,
          ),
        ),
        [
          (
            end: (
              col: 1,
              line: 38,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 35,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        'Read',
        (
          end: (
            col: 14,
            line: 25,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 24,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 25,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 24,
            ),
          ),
        ],
      ),
      (
        ['all'],
        'all',
        (
          end: (
            col: 9,
            line: 118,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 112,
          ),
        ),
        [
          (
            end: (
              col: 9,
              line: 118,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 112,
            ),
          ),
        ],
      ),
    },
    event: {},
    field: {
      |appName, fieldName, fieldSrc, fieldSrcs, typeName|
      (
        ['A'],
        'ax',
        (
          end: (
            col: 8,
            line: 46,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 44,
          ),
        ),
        [
          (
            end: (
              col: 8,
              line: 46,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 44,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['A'],
        'ay',
        (
          end: (
            col: 40,
            line: 46,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 46,
          ),
        ),
        [
          (
            end: (
              col: 40,
              line: 46,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 46,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['B'],
        'bx',
        (
          end: (
            col: 14,
            line: 54,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 54,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 54,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 54,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['B'],
        'by',
        (
          end: (
            col: 14,
            line: 55,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 55,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 55,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 55,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['C'],
        'cx',
        (
          end: (
            col: 14,
            line: 78,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 78,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 78,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 78,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['C'],
        'cy',
        (
          end: (
            col: 14,
            line: 79,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 79,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 79,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 79,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['Client'],
        'ww',
        (
          end: (
            col: 14,
            line: 97,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 97,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 97,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 97,
            ),
          ),
        ],
        'Screen',
      ),
      (
        ['Client'],
        'xx',
        (
          end: (
            col: 14,
            line: 98,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 98,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 98,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 98,
            ),
          ),
        ],
        'Screen',
      ),
      (
        ['Client'],
        'yy',
        (
          end: (
            col: 14,
            line: 99,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 99,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 99,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 99,
            ),
          ),
        ],
        'Screen',
      ),
      (
        ['Client'],
        'zz',
        (
          end: (
            col: 14,
            line: 100,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 100,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 100,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 100,
            ),
          ),
        ],
        'Screen',
      ),
      (
        ['D'],
        'dx',
        (
          end: (
            col: 14,
            line: 88,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 88,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 88,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 88,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['D'],
        'dy',
        (
          end: (
            col: 14,
            line: 89,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 89,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 89,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 89,
            ),
          ),
        ],
        'FetchResponse',
      ),
      (
        ['Source'],
        'a',
        (
          end: (
            col: 24,
            line: 15,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 15,
          ),
        ),
        [
          (
            end: (
              col: 24,
              line: 15,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 15,
            ),
          ),
        ],
        'Bar',
      ),
      (
        ['Source'],
        'b',
        (
          end: (
            col: 8,
            line: 18,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 16,
          ),
        ),
        [
          (
            end: (
              col: 8,
              line: 18,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 16,
            ),
          ),
        ],
        'Bar',
      ),
      (
        ['Source'],
        'x',
        (
          end: (
            col: 8,
            line: 10,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 8,
          ),
        ),
        [
          (
            end: (
              col: 8,
              line: 10,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 8,
            ),
          ),
        ],
        'Foo',
      ),
      (
        ['Source'],
        'x',
        (
          end: (
            col: 8,
            line: 20,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 18,
          ),
        ),
        [
          (
            end: (
              col: 8,
              line: 20,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 18,
            ),
          ),
        ],
        'Bar',
      ),
      (
        ['Source'],
        'y',
        (
          end: (
            col: 4,
            line: 24,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 20,
          ),
        ),
        [
          (
            end: (
              col: 4,
              line: 24,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 20,
            ),
          ),
        ],
        'Bar',
      ),
      (
        ['Source'],
        'y',
        (
          end: (
            col: 13,
            line: 10,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 10,
          ),
        ),
        [
          (
            end: (
              col: 13,
              line: 10,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 10,
            ),
          ),
        ],
        'Foo',
      ),
      (
        ['Source'],
        'z',
        (
          end: (
            col: 16,
            line: 11,
          ),
          file: 'model.sysl',
          start: (
            col: 8,
            line: 11,
          ),
        ),
        [
          (
            end: (
              col: 16,
              line: 11,
            ),
            file: 'model.sysl',
            start: (
              col: 8,
              line: 11,
            ),
          ),
        ],
        'Foo',
      ),
    },
    mixin: {},
    param: {
      |appName, epName, paramName, paramSrc, paramSrcs|
      (['Source'], 'GET /get/{id}', 'id', {}, {}),
      (['Source'], 'POST /post', 'bar', {}, {}),
      (['Source'], 'POST /post', 'page', {}, {}),
      (['Source'], 'POST /post', 'request', {}, {}),
      (['Source'], 'POST /post', 'ssotoken', {}, {}),
      (['Source'], 'POST /post', 'x_request_id', {}, {}),
      (['Source'], 'Read', 'accountNumber', {}, {}),
    },
    stmt: {
      |appName, epName, stmtSrc, stmtSrcs|
      (['A'], 'Fetch', {}, {}),
      (['B'], 'Fetch', {}, {}),
      (['C'], 'Fetch', {}, {}),
      (['C'], 'FetchA', {}, {}),
      (['C'], 'FetchB', {}, {}),
      (['Client'], 'Do', {}, {}),
      (['D'], 'Fetch', {}, {}),
      (['Source'], 'GET /get/{id}', {}, {}),
      (['Source'], 'POST /post', {}, {}),
      (['Source'], 'Read', {}, {}),
      (['all'], 'all', {}, {}),
    },
    type: {
      |appName, typeName, typeSrc, typeSrcs|
      (
        ['A'],
        'FetchResponse',
        (
          end: (
            col: 40,
            line: 46,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 43,
          ),
        ),
        [
          (
            end: (
              col: 40,
              line: 46,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 43,
            ),
          ),
        ],
      ),
      (
        ['B'],
        'Code',
        (
          end: (
            col: 1,
            line: 62,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 57,
          ),
        ),
        [
          (
            end: (
              col: 1,
              line: 62,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 57,
            ),
          ),
        ],
      ),
      (
        ['B'],
        'FetchResponse',
        (
          end: (
            col: 14,
            line: 55,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 53,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 55,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 53,
            ),
          ),
        ],
      ),
      (
        ['C'],
        'FetchResponse',
        (
          end: (
            col: 14,
            line: 79,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 77,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 79,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 77,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        'Digit',
        (
          end: (
            col: 4,
            line: 108,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 105,
          ),
        ),
        [
          (
            end: (
              col: 4,
              line: 108,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 105,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        'Digits',
        (
          end: (
            col: 3,
            line: 111,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 108,
          ),
        ),
        [
          (
            end: (
              col: 3,
              line: 111,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 108,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        'Display',
        (
          end: (
            col: 4,
            line: 105,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 102,
          ),
        ),
        [
          (
            end: (
              col: 4,
              line: 105,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 102,
            ),
          ),
        ],
      ),
      (
        ['Client'],
        'Screen',
        (
          end: (
            col: 14,
            line: 100,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 96,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 100,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 96,
            ),
          ),
        ],
      ),
      (
        ['D'],
        'FetchResponse',
        (
          end: (
            col: 14,
            line: 89,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 87,
          ),
        ),
        [
          (
            end: (
              col: 14,
              line: 89,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 87,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        'Bar',
        (
          end: (
            col: 4,
            line: 24,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 13,
          ),
        ),
        [
          (
            end: (
              col: 4,
              line: 24,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 13,
            ),
          ),
        ],
      ),
      (
        ['Source'],
        'Foo',
        (
          end: (
            col: 16,
            line: 11,
          ),
          file: 'model.sysl',
          start: (
            col: 4,
            line: 4,
          ),
        ),
        [
          (
            end: (
              col: 16,
              line: 11,
            ),
            file: 'model.sysl',
            start: (
              col: 4,
              line: 4,
            ),
          ),
        ],
      ),
    },
    view: {},
  ),
  stmt: {
    |appName, epName, stmtAction, stmtAlt, stmtCall, stmtCond, stmtForeach, stmtGroup, stmtIndex, stmtLoop, stmtLoopN, stmtParent, stmtRet|
    (
      ['A'],
      'Fetch',
      {},
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'A.FetchResponse.ax': 'Source.Foo.x',
                'A.FetchResponse.ay': 'Source.Foo.y',
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['A'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['A'],
      'Fetch',
      {},
      (),
      (
        appName: ['Source'],
        epName: 'Read',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['B'],
      'Fetch',
      {},
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'B.FetchResponse.bx': 'Source.Foo.x',
                'B.FetchResponse.by': 'Source.Foo.y',
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['B'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['B'],
      'Fetch',
      {},
      (),
      (
        appName: ['Source'],
        epName: 'Read',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['C'],
      'Fetch',
      {},
      (),
      (),
      (),
      (),
      (),
      2,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'C.FetchResponse.cx': (
                  a: ['A.FetchResponse.ax', 'B.FetchResponse.bx'],
                ),
                'C.FetchResponse.cy': (
                  a: ['A.FetchResponse.ay', 'B.FetchResponse.by'],
                ),
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['C'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['C'],
      'Fetch',
      {},
      (),
      (
        appName: ['C'],
        epName: 'FetchA',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['C'],
      'Fetch',
      {},
      (),
      (
        appName: ['C'],
        epName: 'FetchB',
      ),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (),
    ),
    (
      ['C'],
      'FetchA',
      {},
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'C.FetchResponse.cx': 'A.FetchResponse.ax',
                'C.FetchResponse.cy': 'A.FetchResponse.ay',
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['C'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['C'],
      'FetchA',
      {},
      (),
      (
        appName: ['A'],
        epName: 'Fetch',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['C'],
      'FetchB',
      {},
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'C.FetchResponse.cx': 'B.FetchResponse.bx',
                'C.FetchResponse.cy': 'B.FetchResponse.by',
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['C'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['C'],
      'FetchB',
      {},
      (),
      (
        appName: ['B'],
        epName: 'Fetch',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['Client'],
      'Do',
      {},
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'Client.Screen.xx': 'D.FetchResponse.dx',
                'Client.Screen.yy': 'D.FetchResponse.dy',
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['Client'],
          typePath: ['Screen'],
        ),
      ),
    ),
    (
      ['Client'],
      'Do',
      {},
      (),
      (
        appName: ['D'],
        epName: 'Fetch',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['D'],
      'Fetch',
      {},
      (),
      (),
      (),
      (),
      (),
      2,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {
            'dataflow': (
              d: {
                'D.FetchResponse.dx': (
                  a: ['A.FetchResponse.ax', 'C.FetchResponse.cx'],
                ),
                'D.FetchResponse.dy': (
                  a: ['A.FetchResponse.ay', 'C.FetchResponse.cy'],
                ),
              },
            ),
            'description': '1:1 transform',
          },
        ),
        type: (
          appName: ['D'],
          typePath: ['FetchResponse'],
        ),
      ),
    ),
    (
      ['D'],
      'Fetch',
      {},
      (),
      (
        appName: ['A'],
        epName: 'Fetch',
      ),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
    (
      ['D'],
      'Fetch',
      {},
      (),
      (
        appName: ['C'],
        epName: 'Fetch',
      ),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (),
    ),
    (
      ['Source'],
      'GET /get/{id}',
      {},
      (),
      (),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {},
        ),
        type: (
          appName: ['Source'],
          typePath: ['Foo'],
        ),
      ),
    ),
    (
      ['Source'],
      'POST /post',
      {},
      (),
      (),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {},
        ),
        type: (
          appName: ['Source'],
          typePath: ['Foo'],
        ),
      ),
    ),
    (
      ['Source'],
      'Read',
      {},
      (),
      (),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (
        attr: (
          modifier: {},
          nvp: {},
        ),
        type: (
          appName: ['Source'],
          typePath: ['Foo'],
        ),
      ),
    ),
    (
      ['all'],
      'all',
      'A',
      (),
      (),
      (),
      (),
      (),
      2,
      (),
      (),
      (),
      (),
    ),
    (
      ['all'],
      'all',
      'B',
      (),
      (),
      (),
      (),
      (),
      3,
      (),
      (),
      (),
      (),
    ),
    (
      ['all'],
      'all',
      'C',
      (),
      (),
      (),
      (),
      (),
      4,
      (),
      (),
      (),
      (),
    ),
    (
      ['all'],
      'all',
      'Client',
      (),
      (),
      (),
      (),
      (),
      1,
      (),
      (),
      (),
      (),
    ),
    (
      ['all'],
      'all',
      'D',
      (),
      (),
      (),
      (),
      (),
      5,
      (),
      (),
      (),
      (),
    ),
    (
      ['all'],
      'all',
      'Source',
      (),
      (),
      (),
      (),
      (),
      0,
      (),
      (),
      (),
      (),
    ),
  },
  table: {
    |appName, pk, typeName|
    (['Source'], {}, 'Foo'),
    (['Source'], ['a'], 'Bar'),
  },
  tag: (
    app: {
      |appName, appTag|
      (['Source'], 'db'),
    },
    ep: {
      |appName, epName, epTag|
      (['Source'], 'GET /get/{id}', 'rest'),
      (['Source'], 'POST /post', 'rest'),
    },
    event: {},
    field: {
      |appName, fieldName, fieldTag, typeName|
      (['Source'], 'a', 'pk', 'Bar'),
    },
    mixin: {},
    param: {
      |appName, epName, paramName, paramTag|
      (['Source'], 'POST /post', 'request', 'body'),
      (['Source'], 'POST /post', 'ssotoken', 'cookie'),
      (['Source'], 'POST /post', 'ssotoken', 'required'),
      (['Source'], 'POST /post', 'x_request_id', 'header'),
      (['Source'], 'POST /post', 'x_request_id', 'required'),
    },
    stmt: {},
    type: {},
    view: {},
  ),
  type: {
    |appName, typeDocstring, typeName, typeOpt|
    (['A'], {}, 'FetchResponse', {}),
    (['B'], {}, 'Code', {}),
    (['B'], {}, 'FetchResponse', {}),
    (['C'], {}, 'FetchResponse', {}),
    (['Client'], {}, 'Digit', {}),
    (['Client'], {}, 'Digits', {}),
    (['Client'], {}, 'Display', {}),
    (['Client'], {}, 'Screen', {}),
    (['D'], {}, 'FetchResponse', {}),
    (['Source'], {}, 'Bar', {}),
    (['Source'], {}, 'Foo', {}),
  },
  view: {},
)
