let (:import, ...) = //{./proto_parser};
let (:module, ...) = //{./proto_to_sysl};

(
    import: (
        conflicting:
            let model = import((importPaths: ['pkg/importer/proto/bundled_files']), ['pkg/importer/proto/tests/google.proto']);
            let sysl = module((), model);

            let actualPackage = sysl.apps('google_protobuf').attrs('go_package').s;
            # typepb is not the package for either any.proto or api.proto, but imported by them.
            # Most importantly it's deterministic.
            # TODO: Handle serialization of applications merged from multiple proto files
            # (i.e. those with name collisions).
            //test.assert.equal("google.golang.org/protobuf/types/known/typepb", actualPackage),

        backslash:
            let model = import((), ['pkg/importer/proto/tests/proto3.proto']);
            let sysl = module((), model);

            let actual = sysl.apps('SearchService').attrs('proto_options').a.elt(0).s;
            //test.assert.equal("php_namespace = Foo\\\\Bar", actual),
    )
)
