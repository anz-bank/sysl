# Code generated by Sysl. DO NOT EDIT.

Name :: Space :: Types:
    @go_package = "helloworld"
    @package = "hello.world"

    !type M3:
        @source_path = "proto/tests/imports.proto"
        test1 <: Name :: Space1 :: Types.State:
            @description =:
                | exact match (Space1), no package
            @json_tag = "test1"
            @rpcId = "1"
        test2 <: Name :: Space2 :: Types.State:
            @description =:
                | exact match (Space2), no package
            @json_tag = "test2"
            @rpcId = "2"
        test3 <: Name :: Space1 :: Types.State:
            @description =:
                | full package  (Space1)
            @json_tag = "test3"
            @rpcId = "3"
        test4 <: Name :: Space1 :: Types.State:
            @description =:
                | partial package (Space1)
            @json_tag = "test4"
            @rpcId = "4"
        test5 <: Name :: Space :: Types.State:
            @description =:
                | should not find without outer message
            @json_tag = "test5"
            @rpcId = "5"

Name :: Space1 :: Types:
    @go_package = "helloworld1"
    @package = "hello.world1"

    !type M1:
        @source_path = "proto/tests/imports1.proto"

    !enum M1_State [source_path="proto/tests/imports1.proto"]:
        STATE_1 : 0

Name :: Space2 :: Types:
    @go_package = "helloworld2"
    @package = "hello.world2"

    !type M2:
        @source_path = "proto/tests/imports2.proto"

    !enum M2_State [source_path="proto/tests/imports2.proto"]:
        STATE_1 : 0
