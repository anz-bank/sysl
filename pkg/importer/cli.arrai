let config = {
    'app-name': (type: 'string', alias: 'a', default: 'App', usage: 'Name of the imported app'),
    'input': (type: 'string', alias: 'i', usage: 'Path to the file or directory to import'),
    'spec': (type: 'string', alias: 's', usage: 'Content of the spec file'),
    'package': (type: 'string', alias: 'p', usage: 'Defines the package of imported app'),
    'import-paths': (type: 'string', alias: 'I', usage: "comma separated list of paths used to resolve imports in " ++
		"the input file. Currently only used for protobuf input."),
    'shallow': (type: 'bool', usage: "Excludes any definitions not imported in the provided file", default: false),
};

let args = //flag.parser(config).parse(//os.args);

\(?:importPath:{}, ?:importSpec:{})
    let config = (
        appName: args.flags('app-name')?:'',
        packageName: args.flags('package')?:'',
        importPaths: args.flags('import-paths')?:{},
        shallow: args.flags('shallow')?:false,
    );
    cond args {
        (flags: {'input': input, ...}, ...): importPath(config, input),
        (flags: {'spec': spec, ...}, ...): importSpec(config, spec),
        _: $`
            Usage:  import_cli [options]

            ${//flag.help(config)}
        `
    }
