let (:naturalOrder, ...) = //{github.com/arr-ai/arrai/contrib/util};
let (:isUpSql, :import, ...) = //{./import};

let upSqlsIn = \dir //os.tree(dir) where isUpSql(.path) => .path orderby naturalOrder(.);

# Assume working directory is repo root.
let testDir = 'pkg/importer/sql/tests';

let simple = $`
    # Code generated by Sysl. DO NOT EDIT.

    Foo:
        !table foo:
            @primary_key = ["a"]
            a <: int64? [~pk]

`;

let config = (appName: 'Foo');

(
    mysql: (
        import: (
            file: import(config, $'${testDir}/mysql/migrations/1_create_foo.up.sql') = simple,
            files: import(config, upSqlsIn($'${testDir}/mysql/migrations')) = simple,
            migrations: import(config, $'${testDir}/mysql/migrations') = simple,
        ),
    ),
    postgresql: (
        import: (
            file: import(config, $'${testDir}/postgresql/migrations/1_create_foo.up.sql') = simple,
            files: import(config, upSqlsIn($'${testDir}/postgresql/migrations')) = simple,
            migrations: import(config, $'${testDir}/postgresql/migrations') = simple,
        ),
    ),

    spanner: (
        import: (
            file: import(config, $'${testDir}/spanner/migrations/1_create_foo.up.sql') = simple,
            files: import(config, upSqlsIn($'${testDir}/spanner/migrations')) = simple,
            migrations: import(config, $'${testDir}/spanner/migrations') = simple,
        ),
    ),
)
