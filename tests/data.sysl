Project [seqtitle="DataModel"]:
    Relational-Model:
        RelModel
    Object-Model:
        ObjectModel
    Primitive-Alias-Model:
        PrimitiveAliasModel
    Enum-Model:
        EnumModel
    Cross-Model:
        Namespace :: CrossModel

RelModel:
    !table Employee:
        employeeId <: int [~pk, ~autoinc]
        name <: string?
        dob <: date?
        error <: int
        petId <: EmployeeTendsPet.petId

    !table Breed:
        breedId <: int [~pk, ~autoinc]
        breedName <: string?
        species <: string?
        numLegs <: int?
        legRank <: int?

    !table Pet:
        petId <: int [~pk, ~autoinc]
        breedId <: Breed.breedId
        name <: string?
        dob <: date?
        numLegs <: int?

    !table EmployeeTendsPet:
        employeeId <: Employee.employeeId [~pk]
        petId <: Pet.petId [~pk]

ObjectModel:
    !type Address:
        line_1 <: string
        city <: string

    !type Customer:
        customer_id <: int
        addresses <: set of Address

    !type Order:
        order_id <: int
        customer <: Customer

Namespace :: CrossModel:
    !type Self:
        name <: string

    !type CustomerExt:
        customer <: ObjectModel.Customer
        self <: Namespace :: CrossModel.Self

PrimitiveAliasModel:
    !type User:
        id <: uuid
        acc <: Account
    !type Account:
        foo <: string
    !alias uuid:
        int

EnumModel:
    !type User:
        id <: uuid
        type <: UserType
    !enum UserType:
        READER: 0
        WRITER: 1
        ADMIN: 2
