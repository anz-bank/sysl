name: Build and Test

on: [pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SYSL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SYSL_PLANTUML: http://www.plantuml.com/plantuml

jobs:
  build-and-test:
    name: Build Go and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install go-bindata
        run: go get github.com/anz-bank/go-bindata/...

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run unit tests
        run: make test

      - name: Set GOVERSION environment variable
        run: echo "GOVERSION=$(go version | awk '{print $3, $4;}')" >> $GITHUB_ENV

      - name: Build sysl binary
        run: make build

      # According to https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#jobsjob_idruns-on
      # Ubuntu: sysl_linux_amd64:
      # macOS Catalina: sysl_darwin_amd64
      - name: Install sysl
        run: |
          mkdir $PWD/bin && \
          cp ./dist/sysl $PWD/bin/sysl

      - name: Test installed
        run: ./scripts/test-gosysl.sh
        env:
          GOPATH: .

  test-windows:
    name: Run unit tests (Windows)
    runs-on: windows-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/go/bin
        key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-cache-

    - name: Install go-bindata
      run: go get github.com/anz-bank/go-bindata/...

    - name: Check out code
      uses: actions/checkout@v2

    - name: Generate intermediate files
      run: make generate

    - name: Run unit tests
      run: .\scripts\test-with-coverage-windows.bat

  build-windows:
    name: Build Go (Windows)
    runs-on: windows-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/go/bin
        key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-cache-

    - name: Install go-bindata
      run: go get github.com/anz-bank/go-bindata/...

    - name: Check out code
      uses: actions/checkout@v2

    - name: Generate intermediate files
      run: make generate

    - name: Build sysl binary
      run: make build-windows

    # sysl_windows_amd64: according to https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#jobsjob_idruns-on
    # Windows Server 2019 supports 64-bit applications
    - name: Install sysl
      run: md .\bin; copy .\dist\sysl.exe .\bin\sysl.exe

    - name: Test installed
      run: .\scripts\test-gosysl.bat

  build-and-test-sysl_js:
    name: Build and test sysl_js on linux
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node
        uses: actions/setup-node@v1

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install and test sysl_js
        run: |
          npm install --prefix unsorted/sysl_js
          npm test --prefix unsorted/sysl_js
        env:
          NPM_AUTH_TOKEN: "SOME-RANDOM-KEY"

  build-docker:
    name: Builds the sysl docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Install go-bindata
        run: go get github.com/anz-bank/go-bindata/...

      - name: Check out code
        uses: actions/checkout@v2

      - name: Generate intermediate files
        run: make generate

      - name: Build and push docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          repository: docker.io/anzbank/sysl
          tag_with_ref: true
          add_git_labels: true
          tags: latest
          push: false
          labels: org.opencontainers.image.revision=${{ github.sha }},org.opencontainers.image.url=https://sysl.io
      
      - name: Store secrets
        run: echo "$DOCKER_USER" | openssl aes-256-cbc -e -a -K ${{ secrets.TEMP_KEY }} -iv ${{ secrets.TEMP_IV }}

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install go-bindata
        run: go get github.com/anz-bank/go-bindata/... && go mod tidy

      - name: Generate intermediate files
        run: make generate

      - name: Run golangci-lint
        run: make lint-docker

      - name: Check tidy
        run: make check-clean

  downstream:
    name: Test downstream repos
    runs-on: ubuntu-latest
    container: golang:1.14-stretch
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install go-bindata
        run: go get github.com/anz-bank/go-bindata/...

      - name: Run downstream tests
        env:
          DOWNSTREAM_TEST: ${{ secrets.DOWNSTREAM_TEST }}
          ORG_GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_TOKEN }}
        run: eval "${DOWNSTREAM_TEST:-echo 'no downstream repos to test'}"
